name: Deploy to Snowflake with Basic Logging

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (update/rollback)'
        required: true
        default: 'update'
      rollbackCount:
        description: 'Number of changesets to rollback'
        required: false
        default: '1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Download and Extract Liquibase
        run: |
          mkdir -p liquibase
          cd liquibase
          wget -q https://github.com/liquibase/liquibase/releases/download/v4.25.0/liquibase-4.25.0.tar.gz
          tar -xzf liquibase-4.25.0.tar.gz
          chmod +x liquibase
      
      - name: Create lib directory for drivers
        run: |
          mkdir -p liquibase/lib
      
      - name: Download Snowflake JDBC Driver
        run: |
          wget -q https://repo1.maven.org/maven2/net/snowflake/snowflake-jdbc/3.14.5/snowflake-jdbc-3.14.5.jar -O liquibase/lib/snowflake-jdbc-3.14.5.jar
      
      - name: Run Liquibase Operation
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          ACTION="${{ github.event.inputs.action || 'update' }}"
          ROLLBACK_COUNT="${{ github.event.inputs.rollbackCount || '1' }}"
          
          cd liquibase
          
          FILENAME="change2.sql"
          TARGET="test_table3"
          
          if [ "$ACTION" == "update" ]; then
            echo "Performing update operation"
            ./liquibase \
              --changeLogFile=../dbscripts/$FILENAME \
              --username=${{ secrets.SNOWFLAKE_USER }} \
              --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
              --classpath=lib/snowflake-jdbc-3.14.5.jar \
              --url='jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH' \
              update
          
          elif [ "$ACTION" == "rollback" ]; then
            echo "Performing rollback operation (count: $ROLLBACK_COUNT)"
            ./liquibase \
              --changeLogFile=../dbscripts/$FILENAME \
              --username=${{ secrets.SNOWFLAKE_USER }} \
              --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
              --classpath=lib/snowflake-jdbc-3.14.5.jar \
              --url='jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH' \
              rollbackCount $ROLLBACK_COUNT
          fi
      
      - name: Create log operation SQL file
        run: |
          cat > log_operation.sql << EOF
          INSERT INTO LIQUIBASE_HISTORY (
              OPERATION,
              CHANGESET,
              AUTHOR,
              FILENAME,
              EXECUTOR,
              STATUS,
              TARGET_OBJECT,
              ACTION,
              COUNT_VALUE
          ) 
          VALUES (
              '${{ github.event.inputs.action || "update" }}',
              'your-name:3',
              'your-name',
              'change2.sql',
              CURRENT_USER(),
              'COMPLETED',
              'test_table3',
              '$(if [ "${{ github.event.inputs.action || "update" }}" == "update" ]; then echo "CREATE TABLE"; else echo "DROP TABLE"; fi)',
              '${{ github.event.inputs.rollbackCount || "1" }}'
          );
          EOF
      
      - name: Log operation to Snowflake
        run: |
          echo "Logging operation to Snowflake..."
          cd liquibase
          ./liquibase \
            --url='jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH' \
            --username=${{ secrets.SNOWFLAKE_USER }} \
            --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
            --classpath=lib/snowflake-jdbc-3.14.5.jar \
            executeSql --sql-file=../log_operation.sql
