name: Deploy to Snowflake with Rollback Support
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'update'
        type: choice
        options:
          - update
          - rollback
      rollbackCount:
        description: 'Number of changesets to rollback'
        required: false
        default: '1'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Download and Extract Liquibase
        run: |
          mkdir -p liquibase
          cd liquibase
          wget -q https://github.com/liquibase/liquibase/releases/download/v4.25.0/liquibase-4.25.0.tar.gz
          tar -xzf liquibase-4.25.0.tar.gz
          chmod +x liquibase
          echo "Current directory contents:"
          ls -la
      
      - name: Download Snowflake JDBC Driver
        run: |
          cd liquibase
          # Create lib directory if it doesn't exist
          mkdir -p lib
          # Download driver directly to the lib folder
          wget -q https://repo1.maven.org/maven2/net/snowflake/snowflake-jdbc/3.14.5/snowflake-jdbc-3.14.5.jar -O lib/snowflake-jdbc-3.14.5.jar
          # Verify the file is there
          echo "JDBC driver downloaded:"
          ls -la lib/
          
          # Add driver to the classpath explicitly
          echo "driver=${PWD}/lib/snowflake-jdbc-3.14.5.jar" >> liquibase.properties
      
      - name: Create Master Changelog
        run: |
          mkdir -p dbscripts
          cat > dbscripts/master.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <databaseChangeLog
              xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.9.xsd">
              
              <include file="change1.sql" relativeToChangelogFile="true"/>
              <include file="change2.sql" relativeToChangelogFile="true"/>
              <!-- Add new SQL files here -->
          </databaseChangeLog>
          EOF
      
      - name: Run Liquibase Action
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          cd liquibase
          
          # Debugging to check if files exist
          echo "Checking for driver file:"
          find . -name "snowflake-jdbc-3.14.5.jar"
          
          # Common parameters with absolute paths and explicit driver location
          LIQUIBASE_PARAMS="--username=${{ secrets.SNOWFLAKE_USER }} \
            --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
            --classpath=${PWD}/lib/snowflake-jdbc-3.14.5.jar \
            --url='jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH' \
            --driver=net.snowflake.client.jdbc.SnowflakeDriver \
            --changelog-file=${GITHUB_WORKSPACE}/dbscripts/master.xml"
          
          # Try to load the driver explicitly 
          echo "Validating JDBC driver:"
          ./liquibase --classpath=${PWD}/lib/snowflake-jdbc-3.14.5.jar driver-info
          
          # Determine action
          if [[ "${{ github.event.inputs.action }}" == "rollback" ]]; then
            echo "Performing rollback of ${{ github.event.inputs.rollbackCount }} changesets"
            ./liquibase $LIQUIBASE_PARAMS rollbackCount ${{ github.event.inputs.rollbackCount }} --logLevel=debug
          else
            echo "Performing update"
            ./liquibase $LIQUIBASE_PARAMS update --logLevel=debug
          fi
          
          # Status check
          echo "Current Liquibase Status:"
          ./liquibase $LIQUIBASE_PARAMS status
