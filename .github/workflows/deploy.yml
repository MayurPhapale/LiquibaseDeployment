name: Deploy to Snowflake with Basic Logging

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (update/rollback)'
        required: true
        default: 'update'
      rollbackCount:
        description: 'Number of changesets to rollback'
        required: false
        default: '1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Download and Extract Liquibase
        run: |
          mkdir -p liquibase
          cd liquibase
          wget -q https://github.com/liquibase/liquibase/releases/download/v4.25.0/liquibase-4.25.0.tar.gz
          tar -xzf liquibase-4.25.0.tar.gz

      - name: Create lib directory for drivers
        run: |
          cd liquibase
          mkdir -p lib

      - name: Download Snowflake JDBC Driver
        run: |
          cd liquibase
          wget -q https://repo1.maven.org/maven2/net/snowflake/snowflake-jdbc/3.14.5/snowflake-jdbc-3.14.5.jar
          mv snowflake-jdbc-3.14.5.jar lib/

      # Run Liquibase Update or Rollback based on workflow input
      - name: Run Liquibase Operation
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          ACTION="${{ github.event.inputs.action || 'update' }}"
          ROLLBACK_COUNT="${{ github.event.inputs.rollbackCount || '1' }}"
          
          cd liquibase
          
          # Set basic details for logging
          CHANGESET="your-name:3"
          AUTHOR="your-name"
          FILENAME="change2.sql"
          TARGET="test_table3"
          
          if [ "$ACTION" == "update" ]; then
            echo "Performing update operation"
            ACTION_TYPE="CREATE TABLE"
            
            # Perform the update
            ./liquibase --search-path=/home/runner/work/LiquibaseDeployment/LiquibaseDeployment/dbscripts \
              update \
              --changelog-file=$FILENAME \
              --username=${{ secrets.SNOWFLAKE_USER }} \
              --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
              --classpath=lib/snowflake-jdbc-3.14.5.jar \
              --url='jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH' \
              --driver='net.snowflake.client.jdbc.SnowflakeDriver'
              
          elif [ "$ACTION" == "rollback" ]; then
            echo "Performing rollback operation (count: $ROLLBACK_COUNT)"
            ACTION_TYPE="DROP TABLE"
            
            # Perform the rollback
            ./liquibase --search-path=/home/runner/work/LiquibaseDeployment/LiquibaseDeployment/dbscripts \
              rollbackCount $ROLLBACK_COUNT \
              --changelog-file=$FILENAME \
              --username=${{ secrets.SNOWFLAKE_USER }} \
              --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
              --classpath=lib/snowflake-jdbc-3.14.5.jar \
              --url='jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH' \
              --driver='net.snowflake.client.jdbc.SnowflakeDriver'
          fi
          
      # Create SQL file with the log entry
      - name: Create log operation SQL file
        run: |
          cat > log_operation.sql << EOF
          INSERT INTO LIQUIBASE_HISTORY (
              OPERATION,
              CHANGESET,
              AUTHOR,
              FILENAME,
              EXECUTOR,
              STATUS,
              TARGET_OBJECT,
              ACTION,
              COUNT_VALUE
          ) 
          VALUES (
              '$ACTION',
              '$CHANGESET',
              '$AUTHOR',
              '$FILENAME',
              CURRENT_USER(),
              'COMPLETED',
              '$TARGET',
              '$ACTION_TYPE',
              $ROLLBACK_COUNT
          );
          EOF

      # Log to database
      - name: Log operation to Snowflake
        run: |
          echo "Logging operation to Snowflake..."
          ./liquibase \
            --url='jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH' \
            --username=${{ secrets.SNOWFLAKE_USER }} \
            --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
            --classpath=lib/snowflake-jdbc-3.14.5.jar \
            --driver='net.snowflake.client.jdbc.SnowflakeDriver' \
            --sqlFile=log_operation.sql
