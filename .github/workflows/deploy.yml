name: Deploy to Snowflake with Rollback Support
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'update'
        type: choice
        options:
          - update
          - rollback
      rollbackCount:
        description: 'Number of changesets to rollback'
        required: false
        default: '1'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Download and Extract Liquibase
        run: |
          mkdir -p liquibase
          cd liquibase
          wget -q https://github.com/liquibase/liquibase/releases/download/v4.25.0/liquibase-4.25.0.tar.gz
          tar -xzf liquibase-4.25.0.tar.gz
          chmod +x liquibase
          echo "Current directory contents:"
          ls -la
      
      - name: Download Snowflake JDBC Driver
        run: |
          # Create lib directory in the right location
          mkdir -p liquibase/internal/lib
          cd liquibase
          
          # Download driver to both possible locations
          wget -q https://repo1.maven.org/maven2/net/snowflake/snowflake-jdbc/3.14.5/snowflake-jdbc-3.14.5.jar -O internal/lib/snowflake-jdbc-3.14.5.jar
          
          # Also download to regular lib for classpath
          mkdir -p lib
          cp internal/lib/snowflake-jdbc-3.14.5.jar lib/
          
          # Verify the files are there
          echo "JDBC driver locations:"
          find . -name "snowflake-jdbc-3.14.5.jar" -type f
      
      - name: Create liquibase.properties
        run: |
          cd liquibase
          cat > liquibase.properties << EOF
          classpath=./lib/snowflake-jdbc-3.14.5.jar
          driver=net.snowflake.client.jdbc.SnowflakeDriver
          url=jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH
          username=${{ secrets.SNOWFLAKE_USER }}
          password=${{ secrets.SNOWFLAKE_PASSWORD }}
          EOF
      
      - name: Create Master Changelog
        run: |
          mkdir -p dbscripts
          cat > dbscripts/master.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <databaseChangeLog
              xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.9.xsd">
              
              <include file="change1.sql" relativeToChangelogFile="true"/>
              <include file="change2.sql" relativeToChangelogFile="true"/>
              <!-- Add new SQL files here -->
          </databaseChangeLog>
          EOF
      
      - name: Run Liquibase Action
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          cd liquibase
          
          # Test if we can load the JDBC driver
          java -cp ./lib/snowflake-jdbc-3.14.5.jar net.snowflake.client.jdbc.SnowflakeDriver 2>&1 || echo "Driver class not loaded properly"
          
          # Verify liquibase can see the driver directory
          ./liquibase --version
          
          # Try checking status to validate configuration
          echo "Testing connection to Snowflake:"
          ./liquibase \
            --classpath=./lib/snowflake-jdbc-3.14.5.jar \
            --driver=net.snowflake.client.jdbc.SnowflakeDriver \
            --url="jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH" \
            --username=${{ secrets.SNOWFLAKE_USER }} \
            --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
            --changelog-file=${GITHUB_WORKSPACE}/dbscripts/master.xml \
            status --verbose
          
          # Determine action
          if [[ "${{ github.event.inputs.action }}" == "rollback" ]]; then
            echo "Performing rollback of ${{ github.event.inputs.rollbackCount }} changesets"
            ./liquibase \
              --classpath=./lib/snowflake-jdbc-3.14.5.jar \
              --driver=net.snowflake.client.jdbc.SnowflakeDriver \
              --url="jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH" \
              --username=${{ secrets.SNOWFLAKE_USER }} \
              --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
              --changelog-file=${GITHUB_WORKSPACE}/dbscripts/master.xml \
              rollbackCount ${{ github.event.inputs.rollbackCount }} --logLevel=debug
          else
            echo "Performing update"
            ./liquibase \
              --classpath=./lib/snowflake-jdbc-3.14.5.jar \
              --driver=net.snowflake.client.jdbc.SnowflakeDriver \
              --url="jdbc:snowflake://WXVXDID-ZN02370.snowflakecomputing.com/?db=${{ secrets.SNOWFLAKE_DATABASE }}&schema=${{ secrets.SNOWFLAKE_SCHEMA }}&warehouse=COMPUTE_WH" \
              --username=${{ secrets.SNOWFLAKE_USER }} \
              --password=${{ secrets.SNOWFLAKE_PASSWORD }} \
              --changelog-file=${GITHUB_WORKSPACE}/dbscripts/master.xml \
              update --logLevel=debug
          fi
